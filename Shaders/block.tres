[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://b5wrcgdisuddd"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gh3ww"]
input_name = "texture"

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_pkev2"]
default_input_values = [0, Vector3(128, 2.08165e-12, 32), 1, Vector3(0.85, 0.2, 0.2)]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_g4n8m"]
source = 5

[sub_resource type="VisualShaderNodeVec4Parameter" id="VisualShaderNodeVec4Parameter_88e6x"]
parameter_name = "overlay_color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 overlay_color;



void fragment() {
	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(TEXTURE, UV);


// Vector4Parameter:5
	vec4 n_out5p0 = overlay_color;


// ColorOp:3
	vec3 n_out3p0 = min(vec3(n_out4p0.xyz), vec3(n_out5p0.xyz));


// Output:0
	COLOR.rgb = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(700, -20)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_gh3ww")
nodes/fragment/2/position = Vector2(-840, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorOp_pkev2")
nodes/fragment/3/position = Vector2(280, -80)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_g4n8m")
nodes/fragment/4/position = Vector2(-240, -140)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec4Parameter_88e6x")
nodes/fragment/5/position = Vector2(-360, 300)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 4, 0, 3, 0, 2, 0, 4, 2, 5, 0, 3, 1)
